name: Test, Build and Deploy

on:
  pull_request:
    branches:
    - main
  push:
    branches:
    - main
    paths-ignore:
    - '**/*.md'
    - .gitignore
    - LICENSE
    - makefile
    - .prettierrc
    - .vscode/**
  workflow_dispatch:
    inputs:
      environment:
        description: 'Which environment to deploy to:'
        required: true
        type: choice
        options:
        - staging
        - prod
        default: staging



env:
  DAGSHUB_USER_TOKEN: ${{ secrets.DAGSHUB_USER_TOKEN }}

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.12'

    - name: Install python dependencies
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        poetry config virtualenvs.create false
        poetry install --no-interaction --no-ansi --no-root

    - name: Install shell dependencies
      run: |
        sudo apt-get install shfmt
        wget -O /tmp/hadolint https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64
        mv /tmp/hadolint /usr/local/bin/hadolint
        chmod +x /usr/local/bin/hadolint

    - name: Run static tests
      run: |
        poetry run pre-commit run --all-files

    - name: Run unit tests
      run: |
        python -m pytest tests/ -v

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '14'

    - name: Install AWS CDK
      run: npm install -g aws-cdk

    - name: CDK Synth
      run: cdk synth

  deploy:
    needs: test-and-build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.12'

    - name: Install python dependencies
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        poetry config virtualenvs.create false
        poetry install --no-interaction --no-ansi --no-root --only main,app,validate-deployment

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '14'

    - name: Install AWS CDK
      run: npm install -g aws-cdk

    - name: Configure AWS credentials for staging
      if: ${{ github.ref != 'refs/heads/main' }}
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_STAGING }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_STAGING }}
        aws-region: eu-west-2

    - name: Configure AWS credentials for prod
      if: ${{ github.ref == 'refs/heads/main' }}
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
        aws-region: eu-west-2

    - name: CDK Deploy
      run: cdk deploy --all --require-approval never

    - name: Validate deployment
      run: python -m tests.api.validate_deployment
