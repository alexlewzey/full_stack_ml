name: Validate Deployment

on:
  schedule:
  - cron: 0 8 * * *
  workflow_dispatch:
    inputs:
      environment:
        description: 'Which environment to deploy to:'
        required: true
        type: choice
        options:
        - staging
        - prod
        default: staging

jobs:
  validate-deployment:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.12'

    - name: Install python dependencies
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        poetry config virtualenvs.create false
        poetry install --no-interaction --no-ansi --no-root --only validate-deployment

    - name: Configure AWS credentials for staging
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging'
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_STAGING }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_STAGING }}
        aws-region: eu-west-2

    - name: Configure AWS credentials for prod
      if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'prod')
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
        aws-region: eu-west-2

    - name: Validate deployment
      run: python -m tests.api.validate_deployment
